name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-frontend:
    name: Test Next.js
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run lint
        run: |
          cd frontend
          npm run lint

  test-backend:
    name: Test Laravel
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: banglaHire
          MYSQL_USER: ${{ secrets.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, xml, curl

      - name: Install Laravel dependencies
        run: |
          cd backend
          composer install --prefer-dist --no-progress

      - name: Set environment values
        run: |
          cd backend
          cp .env.example .env
          php artisan key:generate
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: banglaHire
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
          STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
          SSLC_STORE_ID: ${{ secrets.SSLC_STORE_ID }}
          SSLC_STORE_PASSWORD: ${{ secrets.SSLC_STORE_PASSWORD }}

      - name: Run database migrations
        run: |
          cd backend
          php artisan migrate --force

      - name: Run PHPUnit
        run: |
          cd backend
          ./vendor/bin/phpunit --coverage-text
